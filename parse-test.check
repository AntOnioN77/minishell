
=== Iniciando tests de Minishell ===
       compara con: ./a.out | diff - parse-test.check

Test 1: 'ls -la'
-----------------------------------------------
TASK->cmd: ls
	->argv[0]: ls
	->argv[1]: -la
	->redir->insymbol: 0
	->redir->infoo: (null)
	->redir->outsymbol: 0
	->redir->outfile: (null)


Test 2: 'ls -l |grep .c'
-----------------------------------------------
PIPE
  TASK->cmd: ls
	->argv[0]: ls
	->argv[1]: -l
	->redir->insymbol: 0
	->redir->infoo: (null)
	->redir->outsymbol: 0
	->redir->outfile: (null)
  TASK->cmd: grep
	->argv[0]: grep
	->argv[1]: .c
	->redir->insymbol: 0
	->redir->infoo: (null)
	->redir->outsymbol: 0
	->redir->outfile: (null)


Test 3: 'ls -l | grep .c | wc -l'
-----------------------------------------------
PIPE
  TASK->cmd: ls
	->argv[0]: ls
	->argv[1]: -l
	->redir->insymbol: 0
	->redir->infoo: (null)
	->redir->outsymbol: 0
	->redir->outfile: (null)
  PIPE
    TASK->cmd: grep
	->argv[0]: grep
	->argv[1]: .c
	->redir->insymbol: 0
	->redir->infoo: (null)
	->redir->outsymbol: 0
	->redir->outfile: (null)
    TASK->cmd: wc
	->argv[0]: wc
	->argv[1]: -l
	->redir->insymbol: 0
	->redir->infoo: (null)
	->redir->outsymbol: 0
	->redir->outfile: (null)


Test 4: 'cat < input.txt'
-----------------------------------------------
TASK->cmd: cat
	->argv[0]: cat
	->redir->insymbol: 1
	->redir->infoo: input.txt
	->redir->outsymbol: 0
	->redir->outfile: (null)


Test 5: 'echo hola > output.txt'
-----------------------------------------------
TASK->cmd: echo
	->argv[0]: echo
	->argv[1]: hola
	->redir->insymbol: 0
	->redir->infoo: (null)
	->redir->outsymbol: 2
	->redir->outfile: output.txt


Test 6: 'echo 'texto con espacios''
-----------------------------------------------
TASK->cmd: echo
	->argv[0]: echo
	->argv[1]: 'texto con espacios'
	->redir->insymbol: 0
	->redir->infoo: (null)
	->redir->outsymbol: 0
	->redir->outfile: (null)


Test 7: 'echo "texto con espacios"'
-----------------------------------------------
TASK->cmd: echo
	->argv[0]: echo
	->argv[1]: "texto con espacios"
	->redir->insymbol: 0
	->redir->infoo: (null)
	->redir->outsymbol: 0
	->redir->outfile: (null)


Test 8: 'ls    -l     -a'
-----------------------------------------------
TASK->cmd: ls
	->argv[0]: ls
	->argv[1]: -l
	->argv[2]: -a
	->redir->insymbol: 0
	->redir->infoo: (null)
	->redir->outsymbol: 0
	->redir->outfile: (null)


Test 9: 'ls -l > output.txt | wc -l'
-----------------------------------------------
PIPE
  TASK->cmd: ls
	->argv[0]: ls
	->argv[1]: -l
	->redir->insymbol: 0
	->redir->infoo: (null)
	->redir->outsymbol: 2
	->redir->outfile: output.txt
  TASK->cmd: wc
	->argv[0]: wc
	->argv[1]: -l
	->redir->insymbol: 0
	->redir->infoo: (null)
	->redir->outsymbol: 0
	->redir->outfile: (null)


Test 10: 'cat << EOF'
-----------------------------------------------
TASK->cmd: cat
	->argv[0]: cat
	->redir->insymbol: 3
	->redir->infoo: EOF
	->redir->outsymbol: 0
	->redir->outfile: (null)


Test 11: 'cat <input.txt'
-----------------------------------------------
TASK->cmd: cat
	->argv[0]: cat
	->redir->insymbol: 1
	->redir->infoo: input.txt
	->redir->outsymbol: 0
	->redir->outfile: (null)


Test 12: 'cat<input.txt'
-----------------------------------------------
TASK->cmd: cat
	->argv[0]: cat
	->redir->insymbol: 1
	->redir->infoo: input.txt
	->redir->outsymbol: 0
	->redir->outfile: (null)


Test 13: 'ls -la <infile'
-----------------------------------------------
TASK->cmd: ls
	->argv[0]: ls
	->argv[1]: -la
	->redir->insymbol: 1
	->redir->infoo: infile
	->redir->outsymbol: 0
	->redir->outfile: (null)


Test 14: 'ls -la <infile<infile2'
-----------------------------------------------
TASK->cmd: ls
	->argv[0]: ls
	->argv[1]: -la
	->redir->insymbol: 1
	->redir->infoo: infile2
	->redir->outsymbol: 0
	->redir->outfile: (null)


Test 15: '""|<input'
-----------------------------------------------
PIPE
  TASK->cmd: ""
	->argv[0]: ""
	->redir->insymbol: 0
	->redir->infoo: (null)
	->redir->outsymbol: 0
	->redir->outfile: (null)
  TASK->cmd: (null)
	->redir->insymbol: 1
	->redir->infoo: input
	->redir->outsymbol: 0
	->redir->outfile: (null)


Test 16: '<input'
-----------------------------------------------
TASK->cmd: (null)
	->redir->insymbol: 1
	->redir->infoo: input
	->redir->outsymbol: 0
	->redir->outfile: (null)


Test 17: 'ls'
-----------------------------------------------
TASK->cmd: ls
	->argv[0]: ls
	->redir->insymbol: 0
	->redir->infoo: (null)
	->redir->outsymbol: 0
	->redir->outfile: (null)


Test 18: '<input ls| wc -a'
-----------------------------------------------
PIPE
  TASK->cmd: ls
	->argv[0]: ls
	->redir->insymbol: 1
	->redir->infoo: input
	->redir->outsymbol: 0
	->redir->outfile: (null)
  TASK->cmd: wc
	->argv[0]: wc
	->argv[1]: -a
	->redir->insymbol: 0
	->redir->infoo: (null)
	->redir->outsymbol: 0
	->redir->outfile: (null)


Test 19: 'echo 'comillas''dos veces''
-----------------------------------------------
TASK->cmd: echo
	->argv[0]: echo
	->argv[1]: 'comillas''dos veces'
	->redir->insymbol: 0
	->redir->infoo: (null)
	->redir->outsymbol: 0
	->redir->outfile: (null)


Test 20: 'echo 'comillas''dos veces'>outfile'
-----------------------------------------------
TASK->cmd: echo
	->argv[0]: echo
	->argv[1]: 'comillas''dos veces'
	->redir->insymbol: 0
	->redir->infoo: (null)
	->redir->outsymbol: 2
	->redir->outfile: outfile


Test 21: 'echo >outfile'comillas''dos veces''
-----------------------------------------------
TASK->cmd: echo
	->argv[0]: echo
	->redir->insymbol: 0
	->redir->infoo: (null)
	->redir->outsymbol: 2
	->redir->outfile: outfile'comillas''dos veces'


Test 22: 'echo 'comillas'>outfile'dos veces''
-----------------------------------------------
TASK->cmd: echo
	->argv[0]: echo
	->argv[1]: 'comillas'>outfile'dos veces'
	->redir->insymbol: 0
	->redir->infoo: (null)
	->redir->outsymbol: 0
	->redir->outfile: (null)


=== Tests completados ===
