Lista de las funciones refactorizadas hasta el momento:

RAIZ			3/5 mooks?
	MAIN.C 				3/3
		int			main(int argc, char **argv, char **envp)
		void		shell_cycle(t_tree *tree, t_environ *environ)
		void		status_control(int status, t_environ *environ)
	HANDLER_ERROR.C		4/4
		e_errors	handlerr(e_errors error, t_tree **tree, t_environ *environ)
		e_errors	error_var(e_errors error, t_environ *environ)
		void		ft_perror(int error)
		void		print_error(char *cmd, char *error_msg)
	SIGNAL.C			3/3
		void		signal_conf(void)
		void		handle_sigint(int signal)
		void		handle_sigint_heredoc(int signal)
	CMD_TREE_BUILDER.C	2/3
		e_errors	get_cmd_tree(t_tree **tree, t_environ *environ)
		e_errors	line_control(char *line, t_environ *environ)
ENVIRONMENT		4/4
	CREATE_ENVP			3/3
		e_errors	create_envp(char **original, t_environ *environ)
		int			count_to_null(void **pnt)
		e_errors	copy_prev_envp(char **original, t_environ *environ)
	INIT_ENVP			3/3
		e_errors	init_envp(t_environ *environ) //ECHAR VISTAZO A LA NORMA
		e_errors	set_shlvl(t_environ *environ)
		e_errors	set_pathshell(t_environ *environ, char *path, e_errors error)
	GET_ENVP			1/1
		char		*ft_getenv(const char *name, char *envp[])
	VAR_OPERATION		5/5
		e_errors 	add_var(char *key, char *value, t_environ *environ)
		void		*custom_realloc(void **pnt, size_t oldsize, size_t newsize) //LIBFT?
		e_errors	change_var(char *key, char *newvalue, t_environ *environ)
		char		*var_buid(char *key, char *newvalue)
		int			search_var(char **envp, const char* var)
FREE			1/2
	FREE.C				0/
	FREE_TREE.C			3/3
		void		free_tree(t_tree *node)
		void		free_task(t_tree *node)
		static void	cleanup_garbage(t_garbage *garbage)
BUILTINS		6/6
	BUILTINS.C			2/2
		e_errors	ft_echo(t_task *task)
		void		ft_env(t_environ *environ)
	FT_CD.C				2/2
		void		ft_cd(t_task *task, t_environ *environ)						//ojocuidao esta
		int	cd_destination(t_task *task, char **destination, t_environ *environ)	//quiz치 es mejor pasarle para modificar freedest que destination
	FT_EXIT.C			2/2
		void		ft_exit(t_task *task, t_tree *tree, t_environ *environ)		//mirar en 42 si hay que imprimir "exit cada" vez
		int			select_exitcode(t_task *task, t_environ *environ, char *argument)
	FT_EXPORT.C			4/4
		void		ft_export(t_task *task, t_environ *environ)
		void		export_error(char *identifier, t_environ *environ)
		int			validate_key(char *key)
		char		*getvalue(char *var)
	FT_UNSET.C			2/2
		void		ft_unset(char **argv, t_environ *environ)
		void		ft_unset_one(char *key, t_environ *environ, int index)
	NON_PIPABLE_BUILTIN.C	2/2
		int			countargs(t_task *task)
		int			non_pipable_builtin(t_tree *tree, t_environ *environ)
EXECUTOR
	PROCESS.C			2/2
		int			wait_all(t_tree *node)
		void		close_fds(int fd_since)
	APPLY_REDIRS.C		2/2
		e_errors	apply_redirs(t_redir *redir, char **word_fail)
		e_errors	file_redirector(int newfd, char *file, int opflag, char **wordfail)		//hay que echarle un vistazo por los comentarios, que quiz치 sobre c칩digo. le he quitado lo est치tico por lo largo del prototipo
	EXECUTOR.C




